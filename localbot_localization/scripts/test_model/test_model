#!/usr/bin/env python3

import cv2
import torch
import torch.nn as nn
import torch.nn.functional as F
import torch.optim as optim
from colorama import Fore, Style
import numpy as np
import matplotlib.pyplot as plt
from datetime import datetime  # to track the time each epoch takes
import argparse
import sys
import os
import yaml
from yaml.loader import SafeLoader
from colorama import Fore

from localbot_localization.src.dataset import LocalBotDataset
from localbot_localization.src.loss_functions import BetaLoss, DynamicLoss
from localbot_localization.src.utilities import process_pose
from localbot_localization.src.models.depthnet import CNNDepth, CNNDepthBatch, CNNDepthLow, CNNDepthDropout
# from localbot_localization.src.models.depthnet_low import CNNDepth
from localbot_localization.src.torch_utilities import summarizeModel, resumeTraining


#train_dataset = LocalBotDataset(path_seq='seq1_depth_v')

#train_loader = torch.utils.data.DataLoader(dataset=train_dataset, batch_size=1, shuffle=True)

model = CNNDepthBatch()
#model.cuda()

simulated_data = np.empty((8,1,224,224)).astype(np.float32)
depth_image = torch.from_numpy(simulated_data)

model(depth_image)

summarizeModel(model,simulated_data)

#i = 0
#for points,depth, target_pose in train_loader:
#    depth = depth.cuda()
#    model(depth)


#summarizeModel(model, train_dataset[0][1])
    


