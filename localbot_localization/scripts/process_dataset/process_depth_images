#!/usr/bin/env python3

# stdlib
import sys
import argparse
import copy

# 3rd-party
import rospy
from colorama import Fore, Style
from localbot_localization.src.dataset import LocalBotDataset
from localbot_localization.src.validate_dataset import ValidateDataset
import numpy as np

def main():    
    parser = argparse.ArgumentParser(description='Validate dataset')
    parser.add_argument('-d', '--dataset', type=str, required=True, help='Name of the dataset')
    parser.add_argument('-s', '--suffix', type=str, required=True, help='Suffix to append to the name of the validated dataset')
    parser.add_argument('-gd', '--global_dataset', type=str, default=None, help='Use information of the entire dataset')
    parser.add_argument('-t', '--technique', type=str, default='standardization', help='Use information of the entire dataset')
    
    arglist = [x for x in sys.argv[1:] if not x.startswith('__')]
    args = vars(parser.parse_args(args=arglist))
    
    dataset = LocalBotDataset(path_seq=args['dataset'])
    
    validate = ValidateDataset()
    
    validated_dataset = validate.duplicateDataset(dataset, args['suffix'])
    
    if args['global_dataset'] == None:
        global_dataset = None
    else:
        global_dataset = LocalBotDataset(args['global_dataset'])
    
    
    validate.processDepthImages(validated_dataset, args['technique'], global_dataset)
    
    


        
if __name__ == "__main__":
    main()



