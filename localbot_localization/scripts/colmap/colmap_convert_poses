#!/usr/bin/env python3

# stdlib
import sys
import argparse
import copy
import os

# 3rd-party

import numpy as np
import shutil
from localbot_core.src.utilities import *


def main():
    parser = argparse.ArgumentParser(description='Validate dataset')
    parser.add_argument('-i', '--input', type=str,
                        required=True, help='input folder')
    parser.add_argument('-o', '--output', type=str,
                        required=True, help='number of frames to copy')
    parser.add_argument('-s', '--shift', type=int, default=0, help='shift')

    arglist = [x for x in sys.argv[1:] if not x.startswith('__')]
    args = vars(parser.parse_args(args=arglist))

    input_folder = f'/home/danc/Desktop/'
    input_file = f'{input_folder}/{args["input"]}'
    output_folder = f'/home/danc/Desktop/output/{args["output"]}'

    shift = args['shift']

    if os.path.exists(output_folder):
        shutil.rmtree(output_folder)

    os.makedirs(f'{output_folder}')

    # read poses as txt
    with open(input_file) as f:
        lines = f.readlines()
        
        
    for line in lines:
        lst = line.split(' ')
        
        if len(lst) == 10 and '.png' in lst[-1]:
            frame_idx = int(lst[-1][:4])
            x = lst[5]
            y = lst[6]
            z = lst[7]
            
            qx = lst[2]
            qy = lst[3]
            qz = lst[4]
            qw = lst[1]


            frame_idx = frame_idx + shift

            position = np.array([x, y, z])
            quaternion = np.array([qx, qy, qz, qw])

            matrix33 = quaternionToMatrix(quaternion)

            matrix44 = rotationAndpositionToMatrix44(matrix33, position)

            write_transformation(
                filename=f'{output_folder}/frame-{frame_idx:05d}.pose.txt', transformation=matrix44)


if __name__ == "__main__":
    main()
